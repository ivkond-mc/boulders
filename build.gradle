plugins {
    id 'dev.architectury.loom' version '1.7-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'com.hypherionmc.modutils.modpublisher' version '2.1.6' apply false
    id 'idea'
}

idea {
    module {
        downloadSources = true
    }
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'com.hypherionmc.modutils.modpublisher'

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.officialMojangMappings()
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    publisher {
        apiKeys {
            modrinth = project.findProperty("modrinth.token") ?: System.getenv("MODRINTH_TOKEN")
            curseforge = project.findProperty("curseforge.token") ?: System.getenv("CURSE_TOKEN")
        }

        setCurseID(curseforge_id)
        setModrinthID(modrinth_id)
        setVersionType("release")
        setChangelog(rootProject.file("./CHANGELOG.md"))
        setGameVersions([minecraft_version])
        setCurseEnvironment("both")
        setArtifact(remapJar)
        setJavaVersions([JavaVersion.VERSION_21])
        setDisableEmptyJarCheck(false)
    }
}
